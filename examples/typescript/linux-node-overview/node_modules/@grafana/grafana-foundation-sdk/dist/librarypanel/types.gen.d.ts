import * as cog from '../cog';
import * as dashboard from '../dashboard';
export interface LibraryPanel {
    folderUid?: string;
    uid: string;
    name: string;
    description?: string;
    type: string;
    schemaVersion?: number;
    version: number;
    model: {
        type: string;
        pluginVersion?: string;
        targets?: cog.Dataquery[];
        title?: string;
        description?: string;
        transparent?: boolean;
        datasource?: dashboard.DataSourceRef;
        links?: dashboard.DashboardLink[];
        repeat?: string;
        repeatDirection?: "h" | "v";
        maxPerRow?: number;
        maxDataPoints?: number;
        transformations?: dashboard.DataTransformerConfig[];
        interval?: string;
        timeFrom?: string;
        timeShift?: string;
        hideTimeOverride?: boolean;
        cacheTimeout?: string;
        queryCachingTTL?: number;
        options?: any;
        fieldConfig?: dashboard.FieldConfigSource;
    };
    meta?: LibraryElementDTOMeta;
}
export declare const defaultLibraryPanel: () => LibraryPanel;
export interface LibraryElementDTOMetaUser {
    id: number;
    name: string;
    avatarUrl: string;
}
export declare const defaultLibraryElementDTOMetaUser: () => LibraryElementDTOMetaUser;
export interface LibraryElementDTOMeta {
    folderName: string;
    folderUid: string;
    connectedDashboards: number;
    created: string;
    updated: string;
    createdBy: LibraryElementDTOMetaUser;
    updatedBy: LibraryElementDTOMetaUser;
}
export declare const defaultLibraryElementDTOMeta: () => LibraryElementDTOMeta;
