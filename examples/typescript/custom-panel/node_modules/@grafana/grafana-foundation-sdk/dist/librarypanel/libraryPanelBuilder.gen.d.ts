import * as cog from '../cog';
import * as librarypanel from '../librarypanel';
import * as dashboard from '../dashboard';
export declare class LibraryPanelBuilder implements cog.Builder<librarypanel.LibraryPanel> {
    protected readonly internal: librarypanel.LibraryPanel;
    constructor();
    build(): librarypanel.LibraryPanel;
    folderUid(folderUid: string): this;
    uid(uid: string): this;
    name(name: string): this;
    description(description: string): this;
    type(type: string): this;
    schemaVersion(schemaVersion: number): this;
    version(version: number): this;
    model(model: {
        type: string;
        pluginVersion?: string;
        targets?: cog.Dataquery[];
        title?: string;
        description?: string;
        transparent?: boolean;
        datasource?: dashboard.DataSourceRef;
        links?: dashboard.DashboardLink[];
        repeat?: string;
        repeatDirection?: "h" | "v";
        maxPerRow?: number;
        maxDataPoints?: number;
        transformations?: dashboard.DataTransformerConfig[];
        interval?: string;
        timeFrom?: string;
        timeShift?: string;
        hideTimeOverride?: boolean;
        cacheTimeout?: string;
        queryCachingTTL?: number;
        options?: any;
        fieldConfig?: dashboard.FieldConfigSource;
    }): this;
    meta(meta: cog.Builder<librarypanel.LibraryElementDTOMeta>): this;
}
