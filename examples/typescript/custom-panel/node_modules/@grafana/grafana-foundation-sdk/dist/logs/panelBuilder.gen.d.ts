import * as cog from '../cog';
import * as dashboard from '../dashboard';
import * as common from '../common';
export declare class PanelBuilder implements cog.Builder<dashboard.Panel> {
    protected readonly internal: dashboard.Panel;
    constructor();
    build(): dashboard.Panel;
    id(id: number): this;
    withTarget(targets: cog.Builder<cog.Dataquery>): this;
    title(title: string): this;
    description(description: string): this;
    transparent(transparent: boolean): this;
    datasource(datasource: dashboard.DataSourceRef): this;
    height(h: number): this;
    span(w: number): this;
    links(links: cog.Builder<dashboard.DashboardLink>[]): this;
    repeat(repeat: string): this;
    repeatDirection(repeatDirection: "h" | "v"): this;
    maxPerRow(maxPerRow: number): this;
    maxDataPoints(maxDataPoints: number): this;
    withTransformation(transformations: dashboard.DataTransformerConfig): this;
    interval(interval: string): this;
    timeFrom(timeFrom: string): this;
    timeShift(timeShift: string): this;
    hideTimeOverride(hideTimeOverride: boolean): this;
    libraryPanel(libraryPanel: dashboard.LibraryPanelRef): this;
    cacheTimeout(cacheTimeout: string): this;
    queryCachingTTL(queryCachingTTL: number): this;
    displayName(displayName: string): this;
    unit(unit: string): this;
    decimals(decimals: number): this;
    min(min: number): this;
    max(max: number): this;
    mappings(mappings: dashboard.ValueMapping[]): this;
    thresholds(thresholds: cog.Builder<dashboard.ThresholdsConfig>): this;
    noValue(noValue: string): this;
    withOverride(overrides: {
        matcher: dashboard.MatcherConfig;
        properties: dashboard.DynamicConfigValue[];
    }): this;
    showLabels(showLabels: boolean): this;
    showCommonLabels(showCommonLabels: boolean): this;
    showTime(showTime: boolean): this;
    showLogContextToggle(showLogContextToggle: boolean): this;
    wrapLogMessage(wrapLogMessage: boolean): this;
    prettifyLogMessage(prettifyLogMessage: boolean): this;
    enableLogDetails(enableLogDetails: boolean): this;
    sortOrder(sortOrder: common.LogsSortOrder): this;
    dedupStrategy(dedupStrategy: common.LogsDedupStrategy): this;
}
