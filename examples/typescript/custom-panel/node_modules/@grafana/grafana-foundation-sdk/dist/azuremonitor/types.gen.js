"use strict";
// Code generated - EDITING IS FUTILE. DO NOT EDIT.
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultGrafanaTemplateVariableQuery = exports.defaultWorkspacesQuery = exports.defaultMetricNamesQuery = exports.defaultMetricDefinitionsQuery = exports.defaultMetricNamespaceQuery = exports.defaultResourceNamesQuery = exports.defaultResourceGroupsQuery = exports.defaultSubscriptionsQuery = exports.defaultAppInsightsGroupByQuery = exports.defaultAppInsightsMetricNameQuery = exports.defaultUnknownQuery = exports.defaultBaseGrafanaTemplateVariableQuery = exports.defaultGrafanaTemplateVariableQueryType = exports.GrafanaTemplateVariableQueryType = exports.defaultAzureMetricDimension = exports.defaultAzureMonitorResource = exports.defaultAzureResourceGraphQuery = exports.defaultResultFormat = exports.ResultFormat = exports.defaultAzureTracesFilter = exports.defaultAzureTracesQuery = exports.defaultAzureLogsQuery = exports.defaultAzureMetricQuery = exports.defaultAzureQueryType = exports.AzureQueryType = exports.defaultAzureMonitorQuery = void 0;
const defaultAzureMonitorQuery = () => ({
    refId: "",
    _implementsDataqueryVariant: () => { },
});
exports.defaultAzureMonitorQuery = defaultAzureMonitorQuery;
// Defines the supported queryTypes. GrafanaTemplateVariableFn is deprecated
var AzureQueryType;
(function (AzureQueryType) {
    AzureQueryType["AzureMonitor"] = "Azure Monitor";
    AzureQueryType["LogAnalytics"] = "Azure Log Analytics";
    AzureQueryType["AzureResourceGraph"] = "Azure Resource Graph";
    AzureQueryType["AzureTraces"] = "Azure Traces";
    AzureQueryType["SubscriptionsQuery"] = "Azure Subscriptions";
    AzureQueryType["ResourceGroupsQuery"] = "Azure Resource Groups";
    AzureQueryType["NamespacesQuery"] = "Azure Namespaces";
    AzureQueryType["ResourceNamesQuery"] = "Azure Resource Names";
    AzureQueryType["MetricNamesQuery"] = "Azure Metric Names";
    AzureQueryType["WorkspacesQuery"] = "Azure Workspaces";
    AzureQueryType["LocationsQuery"] = "Azure Regions";
    AzureQueryType["GrafanaTemplateVariableFn"] = "Grafana Template Variable Function";
})(AzureQueryType || (exports.AzureQueryType = AzureQueryType = {}));
const defaultAzureQueryType = () => (AzureQueryType.AzureMonitor);
exports.defaultAzureQueryType = defaultAzureQueryType;
const defaultAzureMetricQuery = () => ({});
exports.defaultAzureMetricQuery = defaultAzureMetricQuery;
const defaultAzureLogsQuery = () => ({});
exports.defaultAzureLogsQuery = defaultAzureLogsQuery;
const defaultAzureTracesQuery = () => ({});
exports.defaultAzureTracesQuery = defaultAzureTracesQuery;
const defaultAzureTracesFilter = () => ({
    property: "",
    operation: "",
    filters: [],
});
exports.defaultAzureTracesFilter = defaultAzureTracesFilter;
var ResultFormat;
(function (ResultFormat) {
    ResultFormat["Table"] = "table";
    ResultFormat["TimeSeries"] = "time_series";
    ResultFormat["Trace"] = "trace";
    ResultFormat["Logs"] = "logs";
})(ResultFormat || (exports.ResultFormat = ResultFormat = {}));
const defaultResultFormat = () => (ResultFormat.Table);
exports.defaultResultFormat = defaultResultFormat;
const defaultAzureResourceGraphQuery = () => ({});
exports.defaultAzureResourceGraphQuery = defaultAzureResourceGraphQuery;
const defaultAzureMonitorResource = () => ({});
exports.defaultAzureMonitorResource = defaultAzureMonitorResource;
const defaultAzureMetricDimension = () => ({});
exports.defaultAzureMetricDimension = defaultAzureMetricDimension;
var GrafanaTemplateVariableQueryType;
(function (GrafanaTemplateVariableQueryType) {
    GrafanaTemplateVariableQueryType["AppInsightsMetricNameQuery"] = "AppInsightsMetricNameQuery";
    GrafanaTemplateVariableQueryType["AppInsightsGroupByQuery"] = "AppInsightsGroupByQuery";
    GrafanaTemplateVariableQueryType["SubscriptionsQuery"] = "SubscriptionsQuery";
    GrafanaTemplateVariableQueryType["ResourceGroupsQuery"] = "ResourceGroupsQuery";
    GrafanaTemplateVariableQueryType["ResourceNamesQuery"] = "ResourceNamesQuery";
    GrafanaTemplateVariableQueryType["MetricNamespaceQuery"] = "MetricNamespaceQuery";
    GrafanaTemplateVariableQueryType["MetricNamesQuery"] = "MetricNamesQuery";
    GrafanaTemplateVariableQueryType["WorkspacesQuery"] = "WorkspacesQuery";
    GrafanaTemplateVariableQueryType["UnknownQuery"] = "UnknownQuery";
})(GrafanaTemplateVariableQueryType || (exports.GrafanaTemplateVariableQueryType = GrafanaTemplateVariableQueryType = {}));
const defaultGrafanaTemplateVariableQueryType = () => (GrafanaTemplateVariableQueryType.AppInsightsMetricNameQuery);
exports.defaultGrafanaTemplateVariableQueryType = defaultGrafanaTemplateVariableQueryType;
const defaultBaseGrafanaTemplateVariableQuery = () => ({});
exports.defaultBaseGrafanaTemplateVariableQuery = defaultBaseGrafanaTemplateVariableQuery;
const defaultUnknownQuery = () => ({
    kind: "UnknownQuery",
});
exports.defaultUnknownQuery = defaultUnknownQuery;
const defaultAppInsightsMetricNameQuery = () => ({
    kind: "AppInsightsMetricNameQuery",
});
exports.defaultAppInsightsMetricNameQuery = defaultAppInsightsMetricNameQuery;
const defaultAppInsightsGroupByQuery = () => ({
    kind: "AppInsightsGroupByQuery",
    metricName: "",
});
exports.defaultAppInsightsGroupByQuery = defaultAppInsightsGroupByQuery;
const defaultSubscriptionsQuery = () => ({
    kind: "SubscriptionsQuery",
});
exports.defaultSubscriptionsQuery = defaultSubscriptionsQuery;
const defaultResourceGroupsQuery = () => ({
    kind: "ResourceGroupsQuery",
    subscription: "",
});
exports.defaultResourceGroupsQuery = defaultResourceGroupsQuery;
const defaultResourceNamesQuery = () => ({
    kind: "ResourceNamesQuery",
    subscription: "",
    resourceGroup: "",
    metricNamespace: "",
});
exports.defaultResourceNamesQuery = defaultResourceNamesQuery;
const defaultMetricNamespaceQuery = () => ({
    kind: "MetricNamespaceQuery",
    subscription: "",
    resourceGroup: "",
});
exports.defaultMetricNamespaceQuery = defaultMetricNamespaceQuery;
const defaultMetricDefinitionsQuery = () => ({
    kind: "MetricDefinitionsQuery",
    subscription: "",
    resourceGroup: "",
});
exports.defaultMetricDefinitionsQuery = defaultMetricDefinitionsQuery;
const defaultMetricNamesQuery = () => ({
    kind: "MetricNamesQuery",
    subscription: "",
    resourceGroup: "",
    resourceName: "",
    metricNamespace: "",
});
exports.defaultMetricNamesQuery = defaultMetricNamesQuery;
const defaultWorkspacesQuery = () => ({
    kind: "WorkspacesQuery",
    subscription: "",
});
exports.defaultWorkspacesQuery = defaultWorkspacesQuery;
const defaultGrafanaTemplateVariableQuery = () => ((0, exports.defaultAppInsightsMetricNameQuery)());
exports.defaultGrafanaTemplateVariableQuery = defaultGrafanaTemplateVariableQuery;
//# sourceMappingURL=types.gen.js.map