import * as cog from '../cog';
import * as common from '../common';
export declare class GraphFieldConfigBuilder implements cog.Builder<common.GraphFieldConfig> {
    private readonly internal;
    constructor();
    build(): common.GraphFieldConfig;
    drawStyle(drawStyle: common.GraphDrawStyle): this;
    gradientMode(gradientMode: common.GraphGradientMode): this;
    thresholdsStyle(thresholdsStyle: cog.Builder<common.GraphThresholdsStyleConfig>): this;
    lineColor(lineColor: string): this;
    lineWidth(lineWidth: number): this;
    lineInterpolation(lineInterpolation: common.LineInterpolation): this;
    lineStyle(lineStyle: cog.Builder<common.LineStyle>): this;
    fillColor(fillColor: string): this;
    fillOpacity(fillOpacity: number): this;
    showPoints(showPoints: common.VisibilityMode): this;
    pointSize(pointSize: number): this;
    pointColor(pointColor: string): this;
    axisPlacement(axisPlacement: common.AxisPlacement): this;
    axisColorMode(axisColorMode: common.AxisColorMode): this;
    axisLabel(axisLabel: string): this;
    axisWidth(axisWidth: number): this;
    axisSoftMin(axisSoftMin: number): this;
    axisSoftMax(axisSoftMax: number): this;
    axisGridShow(axisGridShow: boolean): this;
    scaleDistribution(scaleDistribution: cog.Builder<common.ScaleDistributionConfig>): this;
    axisCenteredZero(axisCenteredZero: boolean): this;
    barAlignment(barAlignment: common.BarAlignment): this;
    barWidthFactor(barWidthFactor: number): this;
    stacking(stacking: cog.Builder<common.StackingConfig>): this;
    hideFrom(hideFrom: cog.Builder<common.HideSeriesConfig>): this;
    transform(transform: common.GraphTransform): this;
    spanNulls(spanNulls: boolean | number): this;
    fillBelowTo(fillBelowTo: string): this;
    pointSymbol(pointSymbol: string): this;
    axisBorderShow(axisBorderShow: boolean): this;
    barMaxWidth(barMaxWidth: number): this;
}
