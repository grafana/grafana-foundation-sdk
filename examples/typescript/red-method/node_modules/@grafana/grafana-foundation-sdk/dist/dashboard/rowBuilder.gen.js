"use strict";
// Code generated - EDITING IS FUTILE. DO NOT EDIT.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RowBuilder = void 0;
const tslib_1 = require("tslib");
const dashboard = tslib_1.__importStar(require("../dashboard"));
// Row panel
class RowBuilder {
    constructor(title) {
        this.internal = dashboard.defaultRowPanel();
        this.internal.title = title;
        this.internal.type = "row";
    }
    build() {
        return this.internal;
    }
    // Whether this row should be collapsed or not.
    collapsed(collapsed) {
        this.internal.collapsed = collapsed;
        return this;
    }
    // Row title
    title(title) {
        this.internal.title = title;
        return this;
    }
    // Name of default datasource for the row
    datasource(datasource) {
        this.internal.datasource = datasource;
        return this;
    }
    // Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    id(id) {
        this.internal.id = id;
        return this;
    }
    // List of panels in the row
    panels(panels) {
        const panelsResources = panels.map(builder1 => builder1.build());
        this.internal.panels = panelsResources;
        return this;
    }
    // Name of template variable to repeat for.
    repeat(repeat) {
        this.internal.repeat = repeat;
        return this;
    }
}
exports.RowBuilder = RowBuilder;
//# sourceMappingURL=rowBuilder.gen.js.map