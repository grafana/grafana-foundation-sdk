"use strict";
// Code generated - EDITING IS FUTILE. DO NOT EDIT.
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnnotationContainerBuilder = void 0;
const tslib_1 = require("tslib");
const dashboard = tslib_1.__importStar(require("../dashboard"));
// Contains the list of annotations that are associated with the dashboard.
// Annotations are used to overlay event markers and overlay event tags on graphs.
// Grafana comes with a native annotation store and the ability to add annotation events directly from the graph panel or via the HTTP API.
// See https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/annotate-visualizations/
class AnnotationContainerBuilder {
    constructor() {
        this.internal = dashboard.defaultAnnotationContainer();
    }
    build() {
        return this.internal;
    }
    // List of annotations
    list(list) {
        const listResources = list.map(builder1 => builder1.build());
        this.internal.list = listResources;
        return this;
    }
}
exports.AnnotationContainerBuilder = AnnotationContainerBuilder;
//# sourceMappingURL=annotationContainerBuilder.gen.js.map