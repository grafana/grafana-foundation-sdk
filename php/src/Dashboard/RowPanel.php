<?php

namespace Grafana\Foundation\Dashboard;

/**
 * Row panel
 */
class RowPanel implements \JsonSerializable
{
    /**
     * The panel type
     */
    public string $type;

    /**
     * Whether this row should be collapsed or not.
     */
    public bool $collapsed;

    /**
     * Row title
     */
    public ?string $title;

    /**
     * Name of default datasource for the row
     */
    public ?\Grafana\Foundation\Dashboard\DataSourceRef $datasource;

    /**
     * Row grid position
     */
    public ?\Grafana\Foundation\Dashboard\GridPos $gridPos;

    /**
     * Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
     */
    public int $id;

    /**
     * List of panels in the row
     * @var array<\Grafana\Foundation\Dashboard\Panel>
     */
    public array $panels;

    /**
     * Name of template variable to repeat for.
     */
    public ?string $repeat;

    /**
     * @param bool|null $collapsed
     * @param string|null $title
     * @param \Grafana\Foundation\Dashboard\DataSourceRef|null $datasource
     * @param \Grafana\Foundation\Dashboard\GridPos|null $gridPos
     * @param int|null $id
     * @param array<\Grafana\Foundation\Dashboard\Panel>|null $panels
     * @param string|null $repeat
     */
    public function __construct(?bool $collapsed = null, ?string $title = null, ?\Grafana\Foundation\Dashboard\DataSourceRef $datasource = null, ?\Grafana\Foundation\Dashboard\GridPos $gridPos = null, ?int $id = null, ?array $panels = null, ?string $repeat = null)
    {
        $this->type = "row";
    
        $this->collapsed = $collapsed ?: false;
        $this->title = $title;
        $this->datasource = $datasource;
        $this->gridPos = $gridPos;
        $this->id = $id ?: 0;
        $this->panels = $panels ?: [];
        $this->repeat = $repeat;
    }

    /**
     * @param array<string, mixed> $inputData
     */
    public static function fromArray(array $inputData): self
    {
        /** @var array{type?: string, collapsed?: bool, title?: string, datasource?: mixed, gridPos?: mixed, id?: int, panels?: array<mixed>, repeat?: string} $inputData */
        $data = $inputData;
        return new self(
            collapsed: $data["collapsed"] ?? null,
            title: $data["title"] ?? null,
            datasource: isset($data["datasource"]) ? (function($input) {
    	/** @var array{type?: string, uid?: string} */
    $val = $input;
    	return \Grafana\Foundation\Dashboard\DataSourceRef::fromArray($val);
    })($data["datasource"]) : null,
            gridPos: isset($data["gridPos"]) ? (function($input) {
    	/** @var array{h?: int, w?: int, x?: int, y?: int, static?: bool} */
    $val = $input;
    	return \Grafana\Foundation\Dashboard\GridPos::fromArray($val);
    })($data["gridPos"]) : null,
            id: $data["id"] ?? null,
            panels: array_filter(array_map((function($input) {
    	/** @var array{type?: string, id?: int, pluginVersion?: string, tags?: array<string>, targets?: array<mixed>, title?: string, description?: string, transparent?: bool, datasource?: mixed, gridPos?: mixed, links?: array<mixed>, repeat?: string, repeatDirection?: string, maxPerRow?: float, maxDataPoints?: float, transformations?: array<mixed>, interval?: string, timeFrom?: string, timeShift?: string, hideTimeOverride?: bool, libraryPanel?: mixed, options?: mixed, fieldConfig?: mixed} */
    $val = $input;
    	return \Grafana\Foundation\Dashboard\Panel::fromArray($val);
    }), $data["panels"] ?? [])),
            repeat: $data["repeat"] ?? null,
        );
    }

    /**
     * @return array<string, mixed>
     */
    public function jsonSerialize(): array
    {
        $data = [
            "type" => $this->type,
            "collapsed" => $this->collapsed,
            "id" => $this->id,
            "panels" => $this->panels,
        ];
        if (isset($this->title)) {
            $data["title"] = $this->title;
        }
        if (isset($this->datasource)) {
            $data["datasource"] = $this->datasource;
        }
        if (isset($this->gridPos)) {
            $data["gridPos"] = $this->gridPos;
        }
        if (isset($this->repeat)) {
            $data["repeat"] = $this->repeat;
        }
        return $data;
    }
}
