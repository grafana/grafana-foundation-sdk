// Code generated - EDITING IS FUTILE. DO NOT EDIT.

import * as cog from '../cog';
import * as dashboard from '../dashboard';

// Row panel
export class RowBuilder implements cog.Builder<dashboard.RowPanel> {
    protected readonly internal: dashboard.RowPanel;

    constructor(title: string) {
        this.internal = dashboard.defaultRowPanel();
        this.internal.title = title;
        this.internal.type = "row";
    }

    build(): dashboard.RowPanel {
        return this.internal;
    }

    // Whether this row should be collapsed or not.
    collapsed(collapsed: boolean): this {
        this.internal.collapsed = collapsed;
        return this;
    }

    // Row title
    title(title: string): this {
        this.internal.title = title;
        return this;
    }

    // Name of default datasource for the row
    datasource(datasource: dashboard.DataSourceRef): this {
        this.internal.datasource = datasource;
        return this;
    }

    // Unique identifier of the panel. Generated by Grafana when creating a new panel. It must be unique within a dashboard, but not globally.
    id(id: number): this {
        this.internal.id = id;
        return this;
    }

    // List of panels in the row
    withPanel(panels: cog.Builder<dashboard.Panel>): this {
        if (!this.internal.panels) {
            this.internal.panels = [];
        }
        const panelsResource = panels.build();
        this.internal.panels.push(panelsResource);
        return this;
    }

    // Name of template variable to repeat for.
    repeat(repeat: string): this {
        this.internal.repeat = repeat;
        return this;
    }
}
