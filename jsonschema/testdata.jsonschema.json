{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "TestDataQueryType": {
      "enum": [
        "random_walk",
        "slow_query",
        "random_walk_with_error",
        "random_walk_table",
        "exponential_heatmap_bucket_data",
        "linear_heatmap_bucket_data",
        "no_data_points",
        "datapoints_outside_range",
        "csv_metric_values",
        "predictable_pulse",
        "predictable_csv_wave",
        "streaming_client",
        "simulation",
        "usa",
        "live",
        "grafana_api",
        "arrow",
        "annotations",
        "table_static",
        "server_error_500",
        "logs",
        "node_graph",
        "flame_graph",
        "raw_frame",
        "csv_file",
        "csv_content",
        "trace",
        "manual_entry",
        "variables-query"
      ]
    },
    "StreamingQuery": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "speed",
        "spread",
        "noise"
      ],
      "properties": {
        "type": {
          "enum": [
            "signal",
            "logs",
            "fetch"
          ]
        },
        "speed": {
          "type": "integer"
        },
        "spread": {
          "type": "integer"
        },
        "noise": {
          "type": "integer"
        },
        "bands": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "PulseWaveQuery": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "timeStep": {
          "type": "integer"
        },
        "onCount": {
          "type": "integer"
        },
        "offCount": {
          "type": "integer"
        },
        "onValue": {
          "type": "number"
        },
        "offValue": {
          "type": "number"
        }
      }
    },
    "SimulationQuery": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/Key"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "stream": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        }
      }
    },
    "NodesQuery": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "random",
            "response",
            "random edges"
          ]
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "USAQuery": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "mode": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CSVWave": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "timeStep": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "valuesCSV": {
          "type": "string"
        },
        "labels": {
          "type": "string"
        }
      }
    },
    "Scenario": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "name",
        "stringInput"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringInput": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hideAliasField": {
          "type": "boolean"
        }
      },
      "description": "TODO: Should this live here given it's not used in the dataquery?"
    },
    "dataquery": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "refId"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "scenarioId": {
          "$ref": "#/definitions/TestDataQueryType",
          "default": "random_walk"
        },
        "stringInput": {
          "type": "string"
        },
        "stream": {
          "$ref": "#/definitions/StreamingQuery"
        },
        "pulseWave": {
          "$ref": "#/definitions/PulseWaveQuery"
        },
        "sim": {
          "$ref": "#/definitions/SimulationQuery"
        },
        "csvWave": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CSVWave"
          }
        },
        "labels": {
          "type": "string"
        },
        "lines": {
          "type": "integer"
        },
        "levelColumn": {
          "type": "boolean"
        },
        "channel": {
          "type": "string"
        },
        "nodes": {
          "$ref": "#/definitions/NodesQuery"
        },
        "csvFileName": {
          "type": "string"
        },
        "csvContent": {
          "type": "string"
        },
        "rawFrameContent": {
          "type": "string"
        },
        "seriesCount": {
          "type": "integer"
        },
        "usa": {
          "$ref": "#/definitions/USAQuery"
        },
        "errorType": {
          "enum": [
            "server_panic",
            "frontend_exception",
            "frontend_observable"
          ]
        },
        "spanCount": {
          "type": "integer"
        },
        "points": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "dropPercent": {
          "type": "number",
          "description": "Drop percentage (the chance we will lose a point 0-100)"
        },
        "refId": {
          "type": "string",
          "description": "A unique identifier for the query within the list of targets.\nIn server side expressions, the refId is used as a variable name to identify results.\nBy default, the UI will assign A-\u003eZ; however setting meaningful names may be useful."
        },
        "hide": {
          "type": "boolean",
          "description": "true if query is disabled (ie should not be returned to the dashboard)\nNote this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)"
        },
        "queryType": {
          "type": "string",
          "description": "Specify the query flavor\nTODO make this required and give it a default"
        },
        "datasource": {
          "type": "object",
          "additionalProperties": {},
          "description": "For mixed data sources the selected datasource is on the query level.\nFor non mixed scenarios this is undefined.\nTODO find a better way to do this ^ that's friendly to schema\nTODO this shouldn't be unknown but DataSourceRef | null"
        }
      }
    },
    "Key": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "tick"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "tick": {
          "type": "number"
        },
        "uid": {
          "type": "string"
        }
      }
    }
  }
}