# yaml-language-server: $schema=https://raw.githubusercontent.com/grafana/cog/main/schemas/compiler_passes.json

# This file is to fill missing information from the openapi spec since the generated by swagger in Grafana isn't complete.
# We can delete it when we have the one generated by app-sdk

passes:
  
  #########
  # Enums #
  #########
  
  # DashboardCursorSync
  - add_object:
      object: dashboardv2beta1.DashboardCursorSync
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Crosshair', value: 'Crosshair' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Tooltip', value: 'Tooltip' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Off', value: 'Off' }
        default: 'Off'

  - retype_field:
      field: dashboardv2beta1.Dashboard.cursorSync
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: DashboardCursorSync }

  # DataTopic
  - add_object:
      object: dashboardv2beta1.DataTopic
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Series', value: 'series' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Annotations', value: 'annotations' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'AlertStates', value: 'alertStates' }

  - retype_field:
      field: dashboardv2beta1.DataTransformerConfig.topic
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: DataTopic }
  
  # SpecialValueMatch
  - add_object:
      object: dashboardv2beta1.SpecialValueMatch
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'True', value: 'true' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'False', value: 'false' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Null', value: 'null' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'NaN', value: 'nan' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'NullAndNaN', value: 'null+nan' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'Empty', value: 'empty' }

  - retype_field:
      field: dashboardv2beta1.SpecialValueMapOptions.match
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: SpecialValueMatch }

  # FieldColorModeId
  - add_object:
      object: dashboardv2beta1.FieldColorModeId
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'thresholds', value: 'thresholds' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'palette-classic', value: 'palette-classic' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'palette-classic-by-name', value: 'palette-classic-by-name' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-GrYlRd', value: 'continuous-GrYlRd' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-RdYlGr', value: 'continuous-RdYlGr' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-BlYlRd', value: 'continuous-BlYlRd' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-YlRd', value: 'continuous-YlRd' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-BlPu', value: 'continuous-BlPu' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-YlBl', value: 'continuous-YlBl' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-blues', value: 'continuous-blues' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-reds', value: 'continuous-reds' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-greens', value: 'continuous-greens' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'continuous-purples', value: 'continuous-purples' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'fixed', value: 'fixed' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'shades', value: 'shades' }

  - retype_field:
      field: dashboardv2beta1.FieldColor.mode
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: FieldColorModeId }

  # FieldColorSeriesByMode
  - add_object:
      object: dashboardv2beta1.FieldColorSeriesByMode
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'min', value: 'min' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'max', value: 'max' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'last', value: 'last' }

  - retype_field:
      field: dashboardv2beta1.FieldColor.seriesBy
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: FieldColorSeriesByMode }

  # ThresholdsMode
  - add_object:
      object: dashboardv2beta1.ThresholdsMode
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'absolute', value: 'absolute' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'percentage', value: 'percentage' }

  - retype_field:
      field: dashboardv2beta1.ThresholdsConfig.mode
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: ThresholdsMode }

  # MappingType
  - add_object:
      object: dashboardv2beta1.MappingType
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'value', value: 'value' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'range', value: 'range' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'regex', value: 'regex' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'special', value: 'special' }

  - retype_field:
      field: dashboardv2beta1.ValueMap.type
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: MappingType, reference_value: 'value' }

  - retype_field:
      field: dashboardv2beta1.RangeMap.type
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: MappingType, reference_value: 'range' }

  - retype_field:
      field: dashboardv2beta1.RegexMap.type
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: MappingType, reference_value: 'regex' }

  - retype_field:
      field: dashboardv2beta1.SpecialValueMap.type
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: MappingType, reference_value: 'special' }

  # DashboardLinkType
  - add_object:
      object: dashboardv2beta1.DashboardLinkType
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'link', value: 'link' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'dashboards', value: 'dashboards' }

  - retype_field:
      field: dashboardv2beta1.DashboardLink.type
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: DashboardLinkType }

  # WeekStart (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.TimeSettingsSpec.weekStart
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'saturday', value: 'saturday' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'monday', value: 'monday' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'sunday', value: 'sunday' }

  # Direction (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.RepeatOptions.direction
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'h', value: 'h' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'v', value: 'v' }

  # ColumnWidthMode (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.AutoGridLayoutSpec.columnWidthMode
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'narrow', value: 'narrow' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'standard', value: 'standard' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'wide', value: 'wide' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'custom', value: 'custom' }
        default: 'standard'

  # RowHeightMode (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.AutoGridLayoutSpec.rowHeightMode
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'short', value: 'short' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'standard', value: 'standard' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'tall', value: 'tall' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'custom', value: 'custom' }
        default: 'standard'

  # VariableSort
  - add_object:
      object: dashboardv2beta1.VariableSort
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'disabled', value: 'disabled' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'alphabeticalAsc', value: 'alphabeticalAsc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'alphabeticalDesc', value: 'alphabeticalDesc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'numericalAsc', value: 'numericalAsc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'numericalDesc', value: 'numericalDesc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'alphabeticalCaseInsensitiveAsc', value: 'alphabeticalCaseInsensitiveAsc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'alphabeticalCaseInsensitiveDesc', value: 'alphabeticalCaseInsensitiveDesc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'naturalAsc', value: 'naturalAsc' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'naturalDesc', value: 'naturalDesc' }

  - retype_field:
      field: dashboardv2beta1.QueryVariableSpec.sort
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableSort }

  # VariableRefresh
  - add_object:
      object: dashboardv2beta1.VariableRefresh
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'never', value: 'never' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'onDashboardLoad', value: 'onDashboardLoad' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'onTimeRangeChanged', value: 'onTimeRangeChanged' }
        default: 'never'

  - retype_field:
      field: dashboardv2beta1.QueryVariableSpec.refresh
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableRefresh }

  - retype_field:
      field: dashboardv2beta1.DatasourceVariableSpec.refresh
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableRefresh }

  - retype_field:
      field: dashboardv2beta1.IntervalVariableSpec.refresh
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableRefresh }

  # VariableHide
  - add_object:
      object: dashboardv2beta1.VariableHide
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'dontHide', value: 'dontHide' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'hideLabel', value: 'hideLabel' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'hideVariable', value: 'hideVariable' }
        default: 'dontHide'

  - retype_field:
      field: dashboardv2beta1.QueryVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.TextVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.ConstantVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.DatasourceVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.IntervalVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.CustomVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.GroupByVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  - retype_field:
      field: dashboardv2beta1.AdhocVariableSpec.hide
      as:
        kind: ref
        ref: { referred_pkg: dashboardv2beta1, referred_type: VariableHide }

  # StaticOptionsOrder (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.QueryVariableSpec.staticOptionsOrder
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'before', value: 'before' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'after', value: 'after' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'sorted', value: 'sorted' }

  # Visibility (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingGroupSpec.visibility
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'show', value: 'show' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'hide', value: 'hide' }

  # Condition (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingGroupSpec.condition
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'and', value: 'and' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'or', value: 'or' }

  # Operator (defined as anonymous)
  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingVariableSpec.operator
      as:
        kind: enum
        enum:
          values:
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'equals', value: 'equals' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'notEquals', value: 'notEquals' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'matches', value: 'matches' }
            - { type: { kind: scalar, scalar: { scalar_kind: string } }, name: 'notMatches', value: 'notMatches' }

  # RepeatMode
  - add_object:
      object: dashboardv2beta1.RepeatMode
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: RepeatMode, reference_value: 'variable' }

  - retype_field:
      field: dashboardv2beta1.RepeatOptions.mode
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: RepeatMode, reference_value: 'variable' }

  - retype_field:
      field: dashboardv2beta1.RowRepeatOptions.mode
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: RepeatMode, reference_value: 'variable' }

  - retype_field:
      field: dashboardv2beta1.TabRepeatOptions.mode
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: RepeatMode, reference_value: 'variable' }

  - retype_field:
      field: dashboardv2beta1.AutoGridRepeatOptions.mode
      as:
        kind: constant_ref
        constant_ref: { referred_pkg: dashboardv2beta1, referred_type: RepeatMode, reference_value: 'variable' }

  #############
  # Constants #
  #############

  - retype_field:
      field: dashboardv2beta1.AdhocVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'AdhocVariable' }


  - retype_field:
      field: dashboardv2beta1.ConstantVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'ConstantVariable' }

  - retype_field:
      field: dashboardv2beta1.DatasourceVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'DatasourceVariable' }

  - retype_field:
      field: dashboardv2beta1.IntervalVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'IntervalVariable' }

  - retype_field:
      field: dashboardv2beta1.CustomVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'CustomVariable' }

  - retype_field:
      field: dashboardv2beta1.GroupByVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'GroupByVariable' }

  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingGroupKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'ConditionalRenderingGroup' }

  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingVariableKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'ConditionalRenderingVariable' }

  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingDataKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'ConditionalRenderingData' }

  - retype_field:
      field: dashboardv2beta1.ConditionalRenderingTimeRangeSizeKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'ConditionalRenderingTimeRangeSizeK' }

  - retype_field:
      field: dashboardv2beta1.PanelKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'Panel' }

  - retype_field:
      field: dashboardv2beta1.LibraryPanelKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'LibraryPanel' }

  - retype_field:
      field: dashboardv2beta1.VizConfigKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'VizConfig' }

  - retype_field:
      field: dashboardv2beta1.QueryGroupKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'QueryGroup' }

  - retype_field:
      field: dashboardv2beta1.PanelQueryKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'PanelQuery' }

  - retype_field:
      field: dashboardv2beta1.AnnotationQueryKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'AnnotationQuery' }

  - retype_field:
      field: dashboardv2beta1.DataQueryKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'DataQuery' }

  - retype_field:
      field: dashboardv2beta1.GridLayoutItemKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'GridLayoutItem' }

  - retype_field:
      field: dashboardv2beta1.GridLayoutKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'GridLayout' }

  - retype_field:
      field: dashboardv2beta1.RowsLayoutKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'RowsLayout' }

  - retype_field:
      field: dashboardv2beta1.RowsLayoutRowKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'RowsLayoutRow' }

  - retype_field:
      field: dashboardv2beta1.AutoGridLayoutKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'AutoGridLayout' }

  - retype_field:
      field: dashboardv2beta1.AutoGridLayoutItemKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'AutoGridLayoutItem' }

  - retype_field:
      field: dashboardv2beta1.TabsLayoutTabKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'TabsLayoutTab' }

  - retype_field:
      field: dashboardv2beta1.TabsLayoutKind.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'TabsLayout' }

  - retype_field:
      field: dashboardv2beta1.ElementReference.kind
      as:
        kind: scalar
        scalar: { scalar_kind: string, value: 'ElementReference' }

  ################
  # Disjunctions #
  ################

  - retype_object:
      object: dashboardv2beta1.PanelKindOrLibraryPanelKind
      as:
        kind: disjunction
        disjunction:
          branches:
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: PanelKind } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: LibraryPanelKind } }

  - retype_object:
      object: dashboardv2beta1.GridLayoutKindOrAutoGridLayoutKindOrTabsLayoutKindOrRowsLayoutKind
      as:
        kind: disjunction
        disjunction:
          branches:
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: GridLayoutKind } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: AutoGridLayoutKind } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: TabsLayoutKind } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: RowsLayoutKind } }

  - retype_object:
      object: dashboardv2beta1.ConditionalRenderingVariableKindOrConditionalRenderingDataKindOrConditionalRenderingTimeRangeSizeKind
      as:
        kind: disjunction
        disjunction:
          branches:
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: ConditionalRenderingVariableKind } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: ConditionalRenderingDataKind } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: ConditionalRenderingTimeRangeSizeKind } }

  - retype_object:
      object: dashboardv2beta1.ValueMapOrRangeMapOrRegexMapOrSpecialValueMap
      as:
        kind: disjunction
        disjunction:
          branches:
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: ValueMap } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: RangeMap } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: RegexMap } }
            - { kind: ref, ref: { referred_pkg: dashboardv2beta1, referred_type: SpecialValueMap } }

  - retype_object:
      object: dashboardv2beta1.StringOrArrayOfString
      as:
        kind: disjunction
        disjunction:
          branches:
            - { kind: scalar, scalar: { scalar_kind: string } }
            - { kind: array, array: { value_type: { kind: scalar, scalar: { scalar_kind: string } } } }


  ############
  # Defaults #
  ############

  - fields_set_default:
      defaults:
        dashboardv2beta1.DataQueryKind.version: 'v0'
        dashboardv2beta1.Dashboard.editable: true
        dashboardv2beta1.TimeRangeOption.display: 'Last 6 hours'
        dashboardv2beta1.TimeRangeOption.from: 'now-6h'
        dashboardv2beta1.TimeRangeOption.to: 'now'
        dashboardv2beta1.TimeSettingsSpec.timezone: 'browser'
        dashboardv2beta1.TimeSettingsSpec.from: 'now-6h'
        dashboardv2beta1.TimeSettingsSpec.to: 'now'
        dashboardv2beta1.TimeSettingsSpec.autoRefreshIntervals: ['5s', '10s', '30s', '1m', '5m', '15m', '30m', '1h', '2h', '1d']
        dashboardv2beta1.TimeSettingsSpec.fiscalYearStartMonth: 0
        
        
